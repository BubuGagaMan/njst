import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "../globals.css";
// import the create context in the layout
// this is only allowed in client components - but what if we want to use it in a server comp?
// a separate component needs to be made and used within the server component file

// import { createContext } from "react";

// separate component import:
import { ThemeProvider } from "./ThemeProvider";
// type Theme = {
//     colors: {
//         primary: string;
//         secondary: string;
//     };
// };
// const defaultTheme: Theme = {
//     colors: {
//         primary: "red",
//         secondary: "orange",
//     },
// };

// const ThemeContext = createContext<Theme>(defaultTheme);

const geistSans = Geist({
    variable: "--font-geist-sans",
    subsets: ["latin"],
});

const geistMono = Geist_Mono({
    variable: "--font-geist-mono",
    subsets: ["latin"],
});

export const metadata: Metadata = {
    title: "Create Next App",
    description: "Generated by create next app",
};

export default function RootLayout({
    children,
}: Readonly<{
    children: React.ReactNode;
}>) {
    return (
        <html lang="en">
            {
                // if we import createContext/ use the context here, in a server component, an error will occur
                // hence, we need to create a separate client component and use it instead
                /* <ThemeContext.Provider value={defaultTheme}> */
            }
            <ThemeProvider>
              <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>{children}</body>
            </ThemeProvider>
            {/* </ThemeContext.Provider> */}
        </html>
    );
}
